---
name: "Unit tests and builds"
on: push
env:
  IMAGE_NAME: "${{ secrets.DOCKER_ORG }}/geospaas:latest-slim"
jobs:
  tests:
    name: Run unit tests
    runs-on: 'ubuntu-20.04'
    steps:
      - name: 'Checkout repository'
        uses: actions/checkout@v2

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }}

      - name: 'Run tests'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: >
             docker run --rm
             -v "$(pwd):/src"
             -e "GITHUB_ACTIONS=$GITHUB_ACTIONS"
             -e "GITHUB_REF=$GITHUB_REF"
             -e "GITHUB_SHA=$GITHUB_SHA"
             -e "GITHUB_HEAD_REF=$GITHUB_HEAD_REF"
             -e "GITHUB_REPOSITORY=$GITHUB_REPOSITORY"
             -e "GITHUB_RUN_ID=$GITHUB_RUN_ID"
             -e "GITHUB_TOKEN=$GITHUB_TOKEN"
             "${IMAGE_NAME}"
             bash -c "coverage run --source=./geospaas_adas_viewer runtests.py && coveralls"

      - name: 'Build Python package'
        if: github.event_name == 'release'
        env:
          TAG_REF: ${{ github.ref }}
        run: >
             docker run --rm
             -v "$(pwd):/src"
             -e "ADAS_VIEWER_RELEASE=${TAG_REF#refs/tags/}"
             "${IMAGE_NAME}"
             python setup.py sdist bdist_wheel

      - name: 'Deploy package to the Github release'
        if: github.event_name == 'release'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: 'dist/*'
          file_glob: true
          tag: ${{ github.ref }}
...